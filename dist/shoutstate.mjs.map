{
  "version": 3,
  "sources": ["../src/shoutstate.ts"],
  "sourcesContent": ["import { Shouts } from \"shoutexp\"\n\nexport { type ShoutVar } from \"shoutexp\"\n\nexport class StateFactory {\n  static StateFactory = StateFactory\n  StateFactory = StateFactory\n\n  active = false\n\n  state = 0\n  limit = 0\n\n  private static V_HL = (v?: number): any => { }\n  private V_HL = StateFactory.V_HL\n\n  /** On Overflow  */\n  onOver = this.V_HL\n  /** On Underflow  */\n  onUnder = this.V_HL\n\n  onPop = this.V_HL\n  onPush = this.V_HL\n\n  onChange = this.V_HL\n\n  setOnOver(callback: typeof this.V_HL) {\n    this.onOver = callback\n  }\n\n  setOnUnder(callback: typeof this.V_HL) {\n    this.onUnder = callback\n  }\n\n  setOnPop(callback: typeof this.V_HL) {\n    this.onPop = callback\n  }\n\n  setOnPush(callback: typeof this.V_HL) {\n    this.onPush = callback\n  }\n\n  setOnChange(callback: typeof this.V_HL) {\n    this.onChange = callback\n  }\n\n  constructor(limit: number) {\n    this.limit = limit\n  }\n\n  checkState() {\n    return this.active = this.state !== 0;\n  }\n\n  /**\n   * Pops the current state.\n   * Decrements the state if possible, otherwise triggers onUnder.\n   * Triggers onPop and onChange callbacks.\n   * @returns {Array} - Array containing results of onUnder, onPop, and onChange.\n   */\n  popState(): Array<any> {\n    let res = new Array(3);\n\n    if (this.state > 0)\n      this.state--;\n    else\n      res[0] = this.onUnder(this.state);\n\n    this.checkState();\n\n    res[1] = this.onPop(this.state);\n    res[2] = this.onChange(this.state);\n\n    return res;\n  }\n\n  /**\n   * Pushes the current state.\n   * Increments the state if possible, otherwise triggers onOver.\n   * Triggers onPush and onChange callbacks.\n   * @returns {Array} - Array containing results of onOver, onPush, and onChange.\n   */\n  pushState(): Array<any> {\n    let res = new Array(3);\n\n    if (this.state < this.limit)\n      this.state++;\n    else\n      res[0] = this.onOver(this.state);\n\n    this.checkState();\n\n    res[1] = this.onPush(this.state);\n    res[2] = this.onChange(this.state);\n\n    return res;\n  }\n}\n\nexport const UseNS = Shouts.ShoutModule() as typeof Shouts;\n\nexport const NSname = {\n  check: (name: string) => `check${name}`,\n  use: (name: string) => `use${name}`,\n  undo: (name: string) => `undo${name}`,\n  access: (name: string) => `access${name}`,\n  lockUse: (name: string) => `lockUse${name}`,\n  mode: (name: string) => `$$${name}`,\n}\n\nexport function createMode(name: string, limit: number) {\n  let state = new StateFactory(limit);\n\n  let LOCKEDARR = new Array<boolean>(5);\n\n  function lock(i: number, v = true) {\n    return LOCKEDARR[i] = v\n  }\n\n  function openCB(i: number, cb: (i?: number) => any) {\n    return LOCKEDARR[i] && cb(i)\n  }\n\n  function check() {\n    return openCB(0, state.checkState)\n  }\n\n  function use() {\n    return openCB(1, state.pushState)\n  }\n\n  function undo() {\n    return openCB(2, state.popState)\n  }\n\n  function access() {\n    return openCB(3, state.popState)\n  }\n\n  function lockUse(i: number) {\n    return openCB(4, () => lock(i, true))\n  }\n\n  const mode = {\n    state,\n    check,\n    use,\n    undo,\n    access,\n    lockUse,\n    $$\n  }\n\n  function $$() {\n    return mode\n  }\n\n  UseNS.createShout(NSname.check(name), check);\n  UseNS.createShout(NSname.use(name), use);\n  UseNS.createShout(NSname.undo(name), undo);\n  UseNS.createShout(NSname.access(name), access);\n  UseNS.createShout(NSname.lockUse(name), () => lockUse);\n  UseNS.createShout(NSname.mode(name), $$);\n\n  return mode;\n}"],
  "mappings": "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",
  "names": ["Shouts", "v", "callback", "limit", "res", "name", "state", "LOCKEDARR", "lock", "i", "openCB", "cb", "check", "use", "undo", "access", "lockUse", "mode", "$$"]
}
